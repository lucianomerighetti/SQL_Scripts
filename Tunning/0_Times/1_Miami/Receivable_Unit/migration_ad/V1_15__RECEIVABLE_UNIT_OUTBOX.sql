CREATE TABLE AD.RECEIVABLE_UNIT_OUTBOX (
    IDT_RECEIVABLE_UNIT_OUTBOX      NUMBER(20)  NOT NULL,
    IDT_RECEIVABLE_UNIT_EXTERNAL    NUMBER(20),
    IDT_RECEIVABLE_UNIT_INTERNAL    NUMBER(20),
    DAT_PARTITION                   DATE            NOT NULL,
    DAT_CREATION                    TIMESTAMP       NOT NULL,
    COD_CUSTOMER                    VARCHAR2(36)    NOT NULL,
    IND_STATUS                      CHAR(1)         NOT NULL,
    NUM_TOPIC_OFFSET                NUMBER(20),
    JSN_METADATA                    BLOB            NOT NULL,
    CONSTRAINT RECEIVABLE_UNIT_OUTBOX_PK PRIMARY KEY ( IDT_RECEIVABLE_UNIT_OUTBOX ) USING INDEX TABLESPACE TSIRECEIVABLES01 INITRANS 48
)
LOB (JSN_METADATA) STORE as SECUREFILE
PARTITION BY
RANGE(DAT_PARTITION)
INTERVAL (NUMTODSINTERVAL(1,'DAY'))
(PARTITION P_1 VALUES LESS THAN (TO_DATE('2020-10-10','YYYY-MM-DD'))
) TABLESPACE TSLOBRECEIVABLES INITRANS 32
;

COMMENT ON TABLE AD.RECEIVABLE_UNIT_OUTBOX IS 'Tabela de outbox de unidade de recebiveis para replica no kafka';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.idt_receivable_unit_outbox IS '[NOT_SECURITY_APPLY] Identificador unico e sequencial da tabel';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.idt_receivable_unit_external IS '[NOT_SECURITY_APPLY] Identificador da unidade de recebível externa';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.idt_receivable_unit_internal IS '[NOT_SECURITY_APPLY] Identificador da unidade de recebível interna';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.dat_partition IS '[NOT_SECURITY_APPLY] Dia da criacao do registro usado para particionar a tabela';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.dat_creation IS '[NOT_SECURITY_APPLY] Data e hora da criacao do registro na tabela';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.cod_customer IS '[NOT_SECURITY_APPLY] Codigo identificador unico do customer que sera usado como chave de particao no kafka';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.ind_status IS '[NOT_SECURITY_APPLY] Status do envio do registro ao kafka, W - waiting, S - sent, E - error';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.num_topic_offset IS '[NOT_SECURITY_APPLY] Offset corrente da mensagem no topico';

COMMENT ON COLUMN AD.RECEIVABLE_UNIT_OUTBOX.jsn_metadata IS '[NOT_SECURITY_APPLY] Binario do conteudo da mensagem a ser postado no kafka';

CREATE INDEX AD.RECEIVABLE_UNIT_OUTBOX_IDX01 ON AD.RECEIVABLE_UNIT_OUTBOX
(IND_STATUS) TABLESPACE TSIRECEIVABLES01 INITRANS 48 ONLINE;

ALTER TABLE AD.RECEIVABLE_UNIT_OUTBOX ADD CONSTRAINT REC_OUT_IDT_REC_EXT_FK FOREIGN KEY ( IDT_RECEIVABLE_UNIT_EXTERNAL )
        REFERENCES AD.RECEIVABLE_UNIT_EXTERNAL ( IDT_RECEIVABLE_UNIT ) ENABLE NOVALIDATE;
		
CREATE INDEX AD.RECEIVABLE_UNIT_OUTBOX_IDX02 ON AD.RECEIVABLE_UNIT_OUTBOX ( IDT_RECEIVABLE_UNIT_EXTERNAL )
 LOCAL INITRANS 48 TABLESPACE TSIRECEIVABLES01 ONLINE;		

ALTER TABLE AD.RECEIVABLE_UNIT_OUTBOX ADD CONSTRAINT REC_OUT_IDT_REC_INT_FK FOREIGN KEY ( IDT_RECEIVABLE_UNIT_INTERNAL )
        REFERENCES AD.RECEIVABLE_UNIT_INTERNAL ( IDT_RECEIVABLE_UNIT ) ENABLE NOVALIDATE;
	
CREATE INDEX AD.RECEIVABLE_UNIT_OUTBOX_IDX03 ON AD.RECEIVABLE_UNIT_OUTBOX ( IDT_RECEIVABLE_UNIT_INTERNAL )
 LOCAL INITRANS 48 TABLESPACE TSIRECEIVABLES01 ONLINE;
 
GRANT SELECT,UPDATE,INSERT,DELETE ON AD.RECEIVABLE_UNIT_OUTBOX TO RECEIVABLESUBR;
GRANT SELECT ON AD.RECEIVABLE_UNIT_OUTBOX TO MANUT_RECEIVABLES;