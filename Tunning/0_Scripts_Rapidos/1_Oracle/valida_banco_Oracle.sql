-- relatório tabelas


    SELECT OWNER, TABLE_NAME, COMP COMPRESSION, PART, DECODE(PARTITIONED,'/','NO',PARTITIONED) PARTITIONED, NUM_ROWS, 
      DATA_TB, QTD_IDX QDADE_INDEX, INDX_TB, LOB_TB, TOTAL_TB, TABLE_SPACE, CACHE_SEQUENCE, COLUMN_CACHE,INI_TRANS,PCT_FREE,
      AVG_UPDATE_DAY,AVG_INSERT_DAY,AVG_DELETE_DAY,GRANT_ROLES
    FROM (  SELECT  DATA.TABLE_NAME, (SELECT COMPR.COMPRESSION FROM DBA_TABLES COMPR WHERE COMPR.OWNER=DATA.OWNER 
	        AND COMPR.TABLE_NAME=DATA.TABLE_NAME)COMP, 
                  (SELECT PART.PARTITIONED FROM DBA_TABLES PART WHERE PART.OWNER=DATA.OWNER AND PART.TABLE_NAME=DATA.TABLE_NAME)PART,
                  (SELECT COUNT(1) FROM DBA_INDEXES IDX WHERE IDX.OWNER=DATA.OWNER AND IDX.TABLE_NAME=DATA.TABLE_NAME)QTD_IDX,
                  DATA.OWNER, PARTITIONING_TYPE || DECODE (SUBPARTITIONING_TYPE, 'none', NULL, '/' || SUBPARTITIONING_TYPE)
                  PARTITIONED, NUM_ROWS, NVL(DATA_TB,0) DATA_TB, NVL(INDX_TB,0) INDX_TB, NVL(LOB_TB,0) LOB_TB,
                  NVL(DATA_TB,0) + NVL(INDX_TB,0) + NVL(LOB_TB,0) TOTAL_TB, DATA.TABLESPACE_NAME TABLE_SPACE, 
                  SEQ_CACHE.CACHE_SEQUENCE, SEQ_CACHE.COLUMN_CACHE, INITRANS_PCTFREE.INI_TRANS ,INITRANS_PCTFREE.PCT_FREE,
                  MODIF.AVG_UPDATE_DAY,MODIF.AVG_INSERT_DAY,MODIF.AVG_DELETE_DAY,ROLES_TAB.GRANT_ROLES
          FROM  ( SELECT OWNER, TABLE_NAME, NVL(MIN(NUM_ROWS),0) NUM_ROWS, ROUND(SUM(DATA_TB),2) DATA_TB, TABLESPACE_NAME
                  FROM (  SELECT OWNER, TABLE_NAME, NUM_ROWS, DATA_TB, TABLESPACE_NAME
                          FROM (  SELECT A.OWNER, A.TABLE_NAME, A.NUM_ROWS, B.TABLESPACE_NAME, B.BYTES/1024/1024/1024/1024 AS DATA_TB
                                  FROM DBA_TABLES A
                                  INNER JOIN DBA_SEGMENTS B
                                  ON A.OWNER=B.OWNER
                                  WHERE A.TABLE_NAME = B.SEGMENT_NAME
                                  AND A.OWNER=SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
                                  AND B.SEGMENT_TYPE IN ('TABLE','TABLE PARTITION')
                                  UNION ALL
                                  SELECT T.OWNER, T.TABLE_NAME, T.NUM_ROWS, nvl(T.TABLESPACE_NAME, pt.DEF_TABLESPACE_NAME) as TABLESPACE_NAME, 0 AS DATA_TB
                                  FROM DBA_TABLES T
                                  LEFT JOIN DBA_PART_TABLES PT
                                  ON T.OWNER = PT.OWNER
                                  AND T.TABLE_NAME = PT.TABLE_NAME
                                  WHERE T.OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
                                  ))                                
                  GROUP BY OWNER, TABLE_NAME, TABLESPACE_NAME) DATA,
                ( SELECT A.TABLE_NAME, ROUND(SUM(B.BYTES/1024/1024/1024/1024),2) AS INDX_TB
                  FROM DBA_INDEXES A, DBA_SEGMENTS B
                  WHERE A.INDEX_NAME = B.SEGMENT_NAME(+) AND A.OWNER=B.OWNER(+) AND A.OWNER=SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
                  GROUP BY A.TABLE_NAME) INDX,
                ( SELECT A.TABLE_NAME, ROUND(SUM(B.BYTES/1024/1024/1024/1024),2) AS LOB_TB
                  FROM DBA_LOBS A, DBA_SEGMENTS B
                  WHERE A.SEGMENT_NAME = B.SEGMENT_NAME(+) AND A.OWNER=B.OWNER(+) AND A.OWNER=SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM' 
                  GROUP BY A.TABLE_NAME) LOB,
				( SELECT ID.OWNER,ID.TABLE_NAME, ID.COLUMN_NAME AS COLUMN_CACHE,
                  SUBSTR(ID.IDENTITY_OPTIONS,(INSTR(ID.IDENTITY_OPTIONS, 'CACHE_SIZE: ') + 12),(INSTR(ID.IDENTITY_OPTIONS, ', ORDER_FLAG') - (INSTR(IDENTITY_OPTIONS, 'CACHE_SIZE: ') + 12))) CACHE_SEQUENCE
                  FROM ALL_TAB_IDENTITY_COLS ID
                  WHERE ID.OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM') SEQ_CACHE, 
                ( SELECT DISTINCT T.OWNER,T.TABLE_NAME,NVL(T.INI_TRANS,PT.DEF_INI_TRANS) AS INI_TRANS,NVL(T.PCT_FREE,PT.DEF_PCT_FREE) AS PCT_FREE
                  FROM DBA_TABLES T
                  LEFT JOIN DBA_PART_TABLES PT
                  ON T.OWNER = PT.OWNER
                  AND T.TABLE_NAME = PT.TABLE_NAME
                  WHERE T.OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM') INITRANS_PCTFREE,
                ( SELECT DT.OWNER,DT.TABLE_NAME,
                         ROUND(SUM(DTM.UPDATES) / TRUNC(SYSDATE -(DT.LAST_ANALYZED - 1)), 2) AVG_UPDATE_DAY,
                         ROUND(SUM(DTM.INSERTS) / TRUNC(SYSDATE -(DT.LAST_ANALYZED - 1)), 2) AVG_INSERT_DAY,
                         ROUND(SUM(DTM.DELETES) / TRUNC(SYSDATE -(DT.LAST_ANALYZED - 1)), 2) AVG_DELETE_DAY
                  FROM DBA_TABLES  DT
                  INNER JOIN DBA_TAB_MODIFICATIONS DTM 
				  ON DT.OWNER = DTM.TABLE_OWNER
                  AND DT.TABLE_NAME = DTM.TABLE_NAME
                  WHERE DT.OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
                  GROUP BY DT.OWNER, DT.TABLE_NAME, DT.LAST_ANALYZED) MODIF,
				( SELECT OWNER, TABLE_NAME, NVL(LISTAGG(GRANTEE,','),'EMPTY') GRANT_ROLES
				  FROM DBA_TAB_PRIVS
				  WHERE OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
				  AND GRANTEE IN ('RL_COMPLIANCE_NSA','RL_COMPLIANCE_SO','RL_COMPLIANCE_PII','RL_COMPLIANCE_PCI','RL_COMPLIANCE_BS','RL_COMPLIANCE_SF')
				  GROUP BY OWNER, TABLE_NAME)  ROLES_TAB				  
                  
                  , DBA_PART_TABLES PART				  
          WHERE DATA.TABLE_NAME = INDX.TABLE_NAME(+) AND
                DATA.TABLE_NAME = LOB.TABLE_NAME(+)  AND
                DATA.TABLE_NAME = SEQ_CACHE.TABLE_NAME(+)  AND
                DATA.TABLE_NAME = INITRANS_PCTFREE.TABLE_NAME(+)  AND
                DATA.TABLE_NAME = MODIF.TABLE_NAME(+)  AND                
                DATA.TABLE_NAME = PART.TABLE_NAME(+) AND
                DATA.TABLE_NAME = ROLES_TAB.TABLE_NAME(+) AND                
                DATA.OWNER = PART.OWNER(+)
  ORDER BY TOTAL_TB DESC);



-- relatório indices
select  
 pi.OWNER
,pi.TABLE_NAME
,pi.INDEX_NAME
,pi.TABLESPACE_INDEX
,pi.TABLESPACE_TABLE
,pi.INITRANS_INDEX
,pi.INITRANS_TABLE
,pi.PCT_FREE_INDEX
,pi.PCT_FREE_TABLE
,CASE WHEN (pi.TABLESPACE_INDEX <> pi.TABLESPACE_TABLE) THEN 'OK' ELSE 'CORRIGIR' END AS STATUS_TABLESPACE
,CASE WHEN ((pi.INITRANS_INDEX = (pi.INITRANS_TABLE * 2)) AND pi.INITRANS_TABLE <= 96) THEN 'OK' ELSE 'CORRIGIR' END AS STATUS_INITRANS
,CASE WHEN (pi.PCT_FREE_INDEX = pi.PCT_FREE_TABLE) THEN 'OK' ELSE 'CORRIGIR' END AS STATUS_PCT_FREE
from
(select 
 i.OWNER
,i.TABLE_NAME
,i.INDEX_NAME
,i.DEF_TABLESPACE_NAME as TABLESPACE_INDEX
,t.DEF_TABLESPACE_NAME as TABLESPACE_TABLE
,i.DEF_INI_TRANS as INITRANS_INDEX
,t.DEF_INI_TRANS as INITRANS_TABLE
,i.DEF_PCT_FREE AS PCT_FREE_INDEX
,t.DEF_PCT_FREE AS PCT_FREE_TABLE
from
(select OWNER, TABLE_NAME, DEF_TABLESPACE_NAME, DEF_INI_TRANS, DEF_PCT_FREE
from DBA_PART_TABLES
where owner = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM') t
inner join
(SELECT OWNER, TABLE_NAME, INDEX_NAME, DEF_TABLESPACE_NAME, DEF_INI_TRANS, DEF_PCT_FREE
FROM DBA_PART_INDEXES
where owner = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM') i
on t.OWNER = i.OWNER
and t.TABLE_NAME = i.TABLE_NAME
UNION ALL
select 
 INP.OWNER
,INP.TABLE_NAME
,INP.INDEX_NAME
,INP.TABLESPACE_NAME as TABLESPACE_INDEX
,TNP.TABLESPACE_NAME as TABLESPACE_TABLE
,INP.INI_TRANS as INITRANS_INDEX
,TNP.INI_TRANS as INITRANS_TABLE
,INP.PCT_FREE AS PCT_FREE_INDEX
,TNP.PCT_FREE AS PCT_FREE_TABLE
from
(select distinct T.OWNER,T.TABLE_NAME,nvl(T.TABLESPACE_NAME, pt.DEF_TABLESPACE_NAME) as TABLESPACE_NAME,nvl(T.INI_TRANS,pt.DEF_INI_TRANS) as INI_TRANS,nvl(T.PCT_FREE,pt.DEF_PCT_FREE) AS PCT_FREE
from all_tables T
left join DBA_PART_TABLES pt
on t.owner = pt.owner
and t.table_name = pt.table_name
where T.owner = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM') TNP 
inner join
(select I.OWNER,I.TABLE_NAME,I.INDEX_NAME,I.TABLESPACE_NAME,I.INI_TRANS,I.PCT_FREE
from all_indexes I
where I.owner = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
and I.INDEX_NAME not in (select PI.INDEX_NAME FROM  DBA_PART_INDEXES PI
where PI.owner = I.owner)) INP 
on TNP.OWNER = INP.OWNER
and TNP.TABLE_NAME = INP.TABLE_NAME) PI
ORDER BY 1,2,3;