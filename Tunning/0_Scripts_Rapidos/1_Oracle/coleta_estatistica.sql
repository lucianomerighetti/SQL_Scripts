-- VERIFICA O STATUS DA COLETA DE ESTATÍSTICA DIARIA

SELECT *
FROM DBA_AUTOTASK_JOB_HISTORY
WHERE WINDOW_START_TIME >= TRUNC(SYSDATE)-1
ORDER BY 7,6;

/*
Automatic Optimizer Statistics Collection - Reúne estatísticas obsoletas ou ausentes para todos os objetos de esquema.
Automatic Segment Advisor - Identifica segmentos que podem ser reorganizados para economizar espaço.
Automatic SQL Tuning Advisor - Identifica e tenta ajustar queries de alta carga ( mais informações ).
*/

SELECT *
FROM DBA_SCHEDULER_WINDOWS;

/*
verificar o horário agendado das coletas
verificar o horário agenda (REPEAT_INTERVAL) e seu fuso-horário (NEXT_START_DATE) 
atualmente o padrao do fuso é o PST8PDT (-5 horas que o BR), porém o correto deve ser o fuso horário AMERICA/SAO PAULO 
(SELECT SESSIONTIMEZONE FROM DUAL;)

exec dbms_scheduler.set_scheduler_attribute('DEFAULT_TIMEZONE', 'America/Sao_Paulo');
*/


-- VALIDA STATUS DAS COLETAS DE TABELAS/PARTICOES
SELECT
   S.OWNER AS "SCHEMA"
  ,S.TABLE_NAME AS "TABELA"
  --,S.OBJECT_TYPE AS "TIPO DE TABELA"
  --,S.PARTITION_NAME AS "NOME DA PARTIÇÃO"
  --,S.PARTITION_POSITION AS "POSIÇÃO DA PARTIÇÃO"  
  ,S.NUM_ROWS AS "QTD. DE LINHAS"
  ,S.STALE_STATS AS "COLETA DESATUALIZADA"  
  ,TO_CHAR(S.LAST_ANALYZED, 'YYYY-MM-DD HH24:MI:SS') AS "ULTIMA COLETA"
FROM
  SYS.DBA_TAB_STATISTICS S
WHERE
  S.OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
  AND S.OBJECT_TYPE = 'TABLE'
  --AND S.LAST_ANALYZED IS NOT NULL
ORDER BY
  S.LAST_ANALYZED DESC;
  

  
-- VALIDA STATUS DAS COLETAS DE INDICES/PARTICOES
SELECT
  -- S.OWNER AS "SCHEMA"
  --,S.TABLE_NAME AS "TABELA"
  --,
  S.INDEX_NAME AS "INDICE"  
  --,S.OBJECT_TYPE AS "TIPO DO OBJETO"
  --,S.PARTITION_NAME AS "NOME DA PARTIÇÃO"
  --,S.PARTITION_POSITION AS "POSIÇÃO DA PARTIÇÃO"  
  ,S.NUM_ROWS AS "QTD. DE LINHAS"
  ,S.STALE_STATS AS "COLETA DESATUALIZADA"    
  ,TO_CHAR(S.LAST_ANALYZED, 'YYYY-MM-DD HH24:MI:SS') AS "ULTIMA COLETA"
FROM
  SYS.DBA_IND_STATISTICS S
WHERE
  S.OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
AND S.OBJECT_TYPE = 'INDEX'
  --AND S.LAST_ANALYZED IS NOT NULL
ORDER BY
  S.LAST_ANALYZED DESC;  
  
  
-- COLETA DE COLUNAS   
SELECT
   S.OWNER AS "SCHEMA"
  ,S.TABLE_NAME AS "TABELA"
  ,S.COLUMN_NAME AS "COLUNA"  
  ,TO_CHAR(S.LAST_ANALYZED, 'YYYY-MM-DD HH24:MI:SS') AS "ULTIMA COLETA"
  ,S.HISTOGRAM
FROM
  SYS.DBA_TAB_COL_STATISTICS S
WHERE
  S.OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM'
AND S.TABLE_NAME = 'REG_CONTRACTUAL_EFFECT';    

 
-- VERIFICA SE TEM HISTOGRAMAS PENDENTES
SELECT *
FROM DBA_TAB_HISTGRM_PENDING_STATS;  

/*
Se retornar algo, efetue a coleta de estatísticas manual
*/



-- VALIDA PARAMETROS GLOBAIS DO BANCO

SELECT --DBMS_STATS.GET_PREFS('APPROXIMATE_NDV_ALGORITHM') AS approximate_ndv_algorithm,
       --DBMS_STATS.GET_PREFS('AUTO_STAT_EXTENSIONS') AS auto_stat_extensions,
       --DBMS_STATS.GET_PREFS('AUTO_TASK_STATUS') AS auto_task_status,
       --DBMS_STATS.GET_PREFS('AUTO_TASK_MAX_RUN_TIME') AS auto_task_max_run_time,
       --DBMS_STATS.GET_PREFS('AUTO_TASK_INTERVAL') AS auto_task_interval,
       DBMS_STATS.GET_PREFS('CASCADE') AS cascade,
       DBMS_STATS.GET_PREFS('CONCURRENT') AS concurrent,
       DBMS_STATS.GET_PREFS('DEGREE') AS degree,
       DBMS_STATS.GET_PREFS('ESTIMATE_PERCENT') AS estimate_percent,
       --DBMS_STATS.GET_PREFS('GLOBAL_TEMP_TABLE_STATS') AS global_temp_table_stats,
       --DBMS_STATS.GET_PREFS('GRANULARITY') AS granularity,
       DBMS_STATS.GET_PREFS('INCREMENTAL') AS incremental,
       DBMS_STATS.GET_PREFS('INCREMENTAL_STALENESS') AS incremental_staleness,
       DBMS_STATS.GET_PREFS('INCREMENTAL_LEVEL') AS incremental_level,
       --DBMS_STATS.GET_PREFS('METHOD_OPT') AS method_opt,
       DBMS_STATS.GET_PREFS('NO_INVALIDATE') AS no_invalidate,
       DBMS_STATS.GET_PREFS('OPTIONS') AS options,
       --DBMS_STATS.GET_PREFS('PREFERENCE_OVERRIDES_PARAMETER') AS preference_overrides_parameter,
       --DBMS_STATS.GET_PREFS('PUBLISH') AS publish,
       DBMS_STATS.GET_PREFS('STALE_PERCENT') AS stale_percent--,
       --DBMS_STATS.GET_PREFS('STAT_CATEGORY') AS stat_category,
       --DBMS_STATS.GET_PREFS('TABLE_CACHED_BLOCKS') AS table_cached_blocks,
       --DBMS_STATS.GET_PREFS('WAIT_TIME_TO_UPDATE_STATS') AS wait_time_to_update_stats
FROM   dual;


-- VERIFICA O TIPO DE COLETA DE ESTATÍSTICA POR TABELA
SELECT *
FROM DBA_TAB_STAT_PREFS
WHERE OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM';  

-- VERIFICA AS TABELAS PARTICIONADAS
SELECT *
FROM DBA_PART_TABLES
WHERE OWNER = SUBSTR(SYS_CONTEXT('USERENV','DB_NAME'),4,50)||'_ADM';


-- ALTERA HORARIO DA COLETA DIARIA
BEGIN
  DBMS_SCHEDULER.DISABLE(NAME=>'"SYS"."MONDAY_WINDOW"',FORCE=>TRUE);
  DBMS_SCHEDULER.SET_ATTRIBUTE(NAME=>'"SYS"."MONDAY_WINDOW"',ATTRIBUTE=>'REPEAT_INTERVAL',VALUE=>'freq=daily;byday=MON;byhour=19;byminute=0; bysecond=0');
  DBMS_SCHEDULER.ENABLE(NAME=>'"SYS"."MONDAY_WINDOW"');  
END;
/

-- ALTERA CONFIGURACOES GLOBAIS DE COLETA
BEGIN
  DBMS_STATS.SET_GLOBAL_PREFS('INCREMENTAL','TRUE'); -- SÓ COLETARÁ ESTATISTICAS DOS DADOS QUE ENTRARAM APÓS A ÚLTIMA COLETA
  DBMS_STATS.SET_GLOBAL_PREFS('DEGREE',4); -- PARALELISMO
  DBMS_STATS.SET_GLOBAL_PREFS('CONCURRENT','AUTOMATIC'); -- CONCORRÊNCIA
END;
/

-- ALTERA CONFIGURACOES DE COLETA DE UMA TABELA EM ESPECÍFICO

EXECUTE DBMS_STATS.SET_TABLE_PREFS('RECEIVABLESETTLEMENT_ADM', 'RECEIVABLE_SETTLEMENT','INCREMENTAL','TRUE');
EXECUTE DBMS_STATS.SET_TABLE_PREFS('RECEIVABLESETTLEMENT_ADM', 'RECEIVABLE_SETTLEMENT',PNAME => 'INCREMENTAL_STALENESS',PVALUE => 'USE_STALE_PERCENT');


-- COPIA AS ESTATÍSTICAS DAS TABELAS
EXECUTE DBMS_STATS.CREATE_STAT_TABLE('SYSTEM','BKP_STATS_TABLE_COLLECT');
​
EXECUTE DBMS_STATS.EXPORT_TABLE_STATS(OWNNAME=>'RECEIVABLESETTLEMENT_ADM',TABNAME=>'RECEIVABLE_SETTLEMENT',STATOWN=>'SYSTEM',STATTAB=>'BKP_STATS_TABLE_COLLECT',CASCADE=>TRUE);

-- EXECUTA A COLETA DE ESTATISTICAS DA TABELA
EXECUTE DBMS_STATS.GATHER_TABLE_STATS (OWNNAME=>'RECEIVABLESETTLEMENT_ADM', TABNAME=>'RECEIVABLE_SETTLEMENT', DEGREE=>8, GRANULARITY=>'ALL', CASCADE=>TRUE, FORCE=>TRUE, ESTIMATE_PERCENT=>5);
EXECUTE DBMS_STATS.GATHER_TABLE_STATS (OWNNAME=>'RECEIVABLESETTLEMENT_ADM', TABNAME=>'RECEIVABLE_SETTLEMENT', PARTNAME=>'P_1', DEGREE=>8, GRANULARITY=>'ALL', CASCADE=>TRUE, FORCE=>TRUE, ESTIMATE_PERCENT=>5);

-- EXECUTA A COLETA DE ESTATÍSTICAS DE INDICE
EXECUTE DBMS_STATS.GATHER_INDEX_STATS (OWNNAME=>'RECEIVABLESETTLEMENT_ADM', INDNAME=>'RECEIVABLE_SETTLEMENT', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 32, GRANULARITY => 'AUTO', NO_INVALIDATE => TRUE, FORCE => TRUE );
EXECUTE DBMS_STATS.GATHER_INDEX_STATS (OWNNAME=>'RECEIVABLESETTLEMENT_ADM', INDNAME=>'RECEIVABLE_SETTLEMENT', PARTNAME=>'P_1', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 32, GRANULARITY => 'AUTO', NO_INVALIDATE => TRUE, FORCE => TRUE );